{
    "DiscordBotCommand": {
        "scope": "typescript",
        "prefix": "discordcommand",
        "body": [
            "import Command from '../../base/Command';",
            "import { CommandInteraction, Permissions } from 'discord.js';",
            "import { SlashCommandBuilder } from '@discordjs/builders';",
            "import IData from '../../utils/IData';",
            "",
            "const commandconfig = {",
            "    name: '${1:${TM_FILENAME_BASE/(.*)/${1:/downcase}/}}',",
            "    description: '${2:This is a command!}',",
            "    enabled: ${3|true,false|},",
            "    guildOnly: ${4|true,false|},",
            "    aliases: [${5}],",
            "    memberPermissions: [${6}],",
            "    botPermissions: [${7:Permissions.FLAGS.SEND_MESSAGES, Permissions.FLAGS.EMBED_LINKS}],",
            "    nsfw: ${8|true,false|},",
            "    ownerOnly: ${9|true,false|},",
            "    cooldown: ${10|1000,3000,5000,15000,30000,60000|},",
            "};",
            "",
            "export default class ${11:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}} extends Command {",
            "    constructor(client) {",
            "        super(client, {",
            "            slashData: ${12:new SlashCommandBuilder().setName(commandconfig.name).setDescription(commandconfig.description)},",
            "            description: commandconfig.description,",
            "            name: commandconfig.name,",
            "            dirname: __dirname,",
            "            enabled: commandconfig.enabled,",
            "            guildOnly: commandconfig.guildOnly,",
            "            memberPermissions: commandconfig.memberPermissions,",
            "            botPermissions: commandconfig.botPermissions,",
            "            nsfw: commandconfig.nsfw,",
            "            ownerOnly: commandconfig.ownerOnly,",
            "            cooldown: commandconfig.cooldown,",
            "        });",
            "    }",
            "",
            "    /**",
            "     * @param { CommandInteraction } interaction - The interaction object",
            "     * @param { IData } data - The mongodb data object",
            "     */",
            "    async run(interaction: CommandInteraction, data: IData) {",
            "        ${0://Your code goes here}",
            "    }",
            "}",
            ""
        ]
    }
}
